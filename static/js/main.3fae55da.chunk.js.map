{"version":3,"sources":["hooks/useFetch.js","utils/constants.js","components/Loading/Loading.jsx","components/SliderMovies/SliderMovies.jsx","components/MovieList/MovieList.jsx","components/Footer/Footer.jsx","pages/home.jsx","pages/error404.jsx","components/ModalVideo/ModalVideo.jsx","pages/movie/movie.jsx","components/MoviesCards/MoviesCards.jsx","components/Paginador/Paginador.jsx","pages/new-movies.jsx","pages/popular.jsx","components/SearchPage/SearchPage.jsx","pages/search/search.jsx","components/MenuTop/MenuTop.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","loading","setLoading","result","setResult","error","setError","useEffect","a","fetch","res","json","getData","URL_API","API_KEY","Loading","className","LoadingOutlined","style","fontSize","spin","Movie","props","movie","id","backdrop_path","title","overview","backdropPath","backgroundImage","to","type","SliderMovies","newMovies","results","autoplay","map","RenderMovie","poster_path","posterPath","Item","Meta","avatar","src","shape","icon","RightOutlined","MovieList","popularMovies","size","header","bordered","dataSource","renderItem","Footer","Layout","href","target","Home","urlPopular","urlRanked","topRankedMovies","xs","sm","md","lg","Error404","ModalVideo","isOpen","close","videoKey","videoPlatform","urlVideo","setUrlVideo","visible","centered","onCancel","footer","controls","muted","movieInfo","span","offset","image","PosterMovie","MovieInfo","release_date","genres","isVisibleModal","setIsVisibleModal","videoMovie","console","log","openModal","closeModal","moment","format","length","onClick","key","site","renderVideo","gender","name","useParams","Card","CardNewMovie","width","margin","cover","alt","textAlign","description","MoviesCards","movieList","currentPage","onChange","total","pageSize","NewMovies","setMovieList","page","setPage","response","movies","Paginador","e","total_results","Popular","Prueba","SearchPage","Search","inputUsuario","setImputUsuario","setUrl","placeholder","value","MenuTop","theme","mode","defaultSelectedKeys","lineHeight","App","Header","Content","basename","zIndex","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4gBAwBeA,EAtBE,SAACC,EAAKC,GACnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,+EAEUC,MAAMX,EAAKC,GAFrB,cAEFW,EAFE,gBAGWA,EAAIC,OAHf,OAGFA,EAHE,OAIRP,EAAUO,GACVT,GAAW,GALH,kDAORI,EAAS,EAAD,IACRJ,GAAW,GARH,0DAAH,qDAWbU,KACD,CAACd,EAAKC,IACF,CAACE,UAASE,SAAQE,UCrBhBQ,EAAU,+BACVC,EAAU,mC,yDCWRC,EATC,WACZ,OACI,sBAAKC,UAAU,UAAf,UACI,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAC9C,iDCmBNC,G,OAAQ,SAAAC,GACV,MAKKA,EALEC,MACHC,EADJ,EACIA,GACAC,EAFJ,EAEIA,cACAC,EAHJ,EAGIA,MACAC,EAJJ,EAIIA,SAGEC,EAAY,6CAAyCH,GAE3D,OACI,qBACIT,UAAU,uBACVE,MAAO,CAACW,gBAAgB,QAAD,OAAUD,EAAV,OAF3B,SAII,qBAAKZ,UAAU,4BAAf,SACI,gCACI,6BAAKU,IACL,4BAAIC,IACJ,cAAC,IAAD,CAAMG,GAAE,iBAAYN,GAApB,SACI,cAAC,IAAD,CAAQO,KAAK,UAAb,mCAQTC,EAhDM,SAAAV,GAEjB,IAAQW,EAAcX,EAAdW,UACR,GAAGA,EAAUhC,UAAYgC,EAAU9B,OAC/B,OAAO,cAAC,EAAD,IAIX,IAAQ+B,EAAYD,EAAU9B,OAAtB+B,QAER,OACI,cAAC,IAAD,CAAUC,UAAQ,EAACnB,UAAU,gBAA7B,SACKkB,EAAQE,KAAI,SAAAb,GAAK,OACd,cAAC,EAAD,CACAA,MAAOA,GADKA,EAAMC,U,0BCO5Ba,G,OAAc,SAAAf,GAChB,MAMIA,EANIC,MAEAe,EAFR,EAEQA,YACAd,EAHR,EAGQA,GACAE,EAJR,EAIQA,MAGFa,EAAU,6CAAyCD,GAEzD,OACI,eAAC,IAAKE,KAAN,CAAWxB,UAAU,oBAArB,UACI,cAAC,IAAKwB,KAAKC,KAAX,CACIC,OAAQ,cAAC,IAAD,CAAQC,IAAKJ,IACrBb,MAAQ,cAAC,IAAD,CAAMI,GAAE,iBAAYN,GAApB,SAA2BE,MAEvC,cAAC,IAAD,CAAMI,GAAE,iBAAYN,GAApB,SACI,cAAC,IAAD,CACIO,KAAK,UACLa,MAAM,SACNC,KAAM,cAACC,EAAA,EAAD,aAQXC,EA/CG,SAAAzB,GACd,IAAOI,EAAwBJ,EAAxBI,MAAOsB,EAAiB1B,EAAjB0B,cAEd,OAAGA,EAAc/C,UAAY+C,EAAc7C,OAChC,cAAC,EAAD,IAIP,cAAC,IAAD,CACIa,UAAU,aACViC,KAAK,UACLC,OAAQ,6BAAKxB,IACbyB,UAAQ,EACRC,WAAYJ,EAAc7C,OAAO+B,QACjCmB,WAAY,SAAA9B,GAAK,OAAI,cAAC,EAAD,CAAaA,MAAOA,QCNtC+B,G,OAZA,WACX,IAAOA,EAAUC,IAAVD,OACP,OACI,cAACA,EAAD,CAAQtC,UAAU,SAAlB,SACI,8DACI,mBAAGwC,KAAK,oCAAoCC,OAAO,SAAnD,oCCyBDC,EAzBF,WACT,IAAM5D,EAAG,UAAMe,EAAN,sCAA2CC,EAA3C,0BACH6C,EAAU,UAAM9C,EAAN,kCAAuCC,EAAvC,0BACV8C,EAAS,UAAM/C,EAAN,oCAAyCC,EAAzC,0BAETmB,EAAYpC,EAASC,GACrBkD,EAAgBnD,EAAS8D,GACzBE,EAAkBhE,EAAS+D,GAEjC,OACI,gCACI,cAAC,EAAD,CAAc3B,UAAWA,IACzB,eAAC,IAAD,WACI,cAAC,IAAD,CAAK6B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACI,cAAC,EAAD,CAAWvC,MAAM,sBAAsBsB,cAAeA,MAE1D,cAAC,IAAD,CAAKc,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACA,cAAC,EAAD,CAAWvC,MAAM,2BAAwBsB,cAAea,SAG5D,cAAC,EAAD,QCxBGK,EAJE,WACb,MAAO,gB,6CCuCIC,G,OAlCI,SAAA7C,GACf,IAAO8C,EAA0C9C,EAA1C8C,OAAQC,EAAkC/C,EAAlC+C,MAAOC,EAA2BhD,EAA3BgD,SAAUC,EAAiBjD,EAAjBiD,cAChC,EAAgCvE,mBAAS,MAAzC,mBAAOwE,EAAP,KAAiBC,EAAjB,KAgBA,OAbAlE,qBAAU,WACN,OAAQgE,GACN,IAAK,UACHE,EAAY,oBAAD,OAAqBH,IAClC,MACA,IAAK,QACHG,EAAY,qBAAD,OAAsBH,OAKpC,CAACA,EAAUC,IAGZ,cAAC,IAAD,CACIvD,UAAU,cACV0D,QAASN,EACTO,UAAQ,EACRC,SAAUP,EACVQ,QAAQ,EALZ,SAOI,cAAC,IAAD,CACI/E,IAAK0E,EACLM,UAAQ,EACRC,OAAK,QCVf1C,G,OAAc,SAAAf,GAChB,MAQIA,EAPA0D,UACI7E,OAEIsB,GAJZ,EAGYC,MAHZ,EAIYD,eACAa,EALZ,EAKYA,YAKNV,EAAY,6CAAyCH,GAE3D,OACI,sBACIT,UAAU,QACVE,MAAO,CAACW,gBAAgB,QAAD,OAAUD,EAAV,OAF3B,gBAGI,qBAAKZ,UAAU,cAAf,SACI,eAAC,IAAD,CAAKA,UAAU,OAAf,UACI,cAAC,IAAD,CAAKiE,KAAM,EAAGC,OAAQ,EAAGlE,UAAU,gBAAnC,SACI,cAAC,EAAD,CAAamE,MAAO7C,MAExB,cAAC,IAAD,CAAK2C,KAAM,GAAIjE,UAAU,cAAzB,SACI,cAAC,EAAD,CACIgE,UAAW1D,EAAM0D,wBASvCI,EAAc,SAAA9D,GAChB,IAAQ6D,EAAU7D,EAAV6D,MACF5C,EAAU,6CAAyC4C,GAEzD,OACI,qBAAKjE,MAAO,CAACW,gBAAgB,QAAD,OAAUU,EAAV,UAI9B8C,EAAY,SAAA/D,GACd,MAOWA,EAPH0D,UACJ7E,OACIuB,EAFR,EAEQA,MACAF,EAHR,EAGQA,GACA8D,EAJR,EAIQA,aACA3D,EALR,EAKQA,SACA4D,EANR,EAMQA,OAGR,EAA4CvF,oBAAS,GAArD,mBAAOwF,EAAP,KAAuBC,EAAvB,KAEM3F,EAAG,UAAMe,EAAN,kBAAuBW,EAAvB,2BAA4CV,EAA5C,mBACH4E,EAAa7F,EAASC,GAC5B6F,QAAQC,IAAIF,GAGZ,IAAMG,EAAY,kBAAMJ,GAAkB,IACpCK,EAAa,kBAAML,GAAkB,IA0B3C,OACI,gCACI,sBAAKzE,UAAU,OAAf,UACI,+BACKU,EACD,+BACKqE,IAAOT,EAAc,cAAcU,OAAO,aA9B3C,WAChB,GAAGN,EAAWvF,QACPuF,EAAWvF,OAAO+B,QAAQ+D,OAAS,EAClC,OACI,gCACI,eAAC,IAAD,CACIjF,UAAU,SACVkF,QAASL,EAFb,UAGI,mBAAG7E,UAAU,uBAHjB,iBAOA,cAAC,EAAD,CACIsD,SAAUoB,EAAWvF,OAAO+B,QAAQ,GAAGiE,IACvC5B,cAAemB,EAAWvF,OAAO+B,QAAQ,GAAGkE,KAC5ChC,OAAQoB,EACRnB,MAAOyB,OAiBlBO,MAGL,sBAAKrF,UAAU,UAAf,UACI,yCACA,4BAAIW,IACJ,yCACA,6BACK4D,EAAOnD,KAAI,SAAAkE,GAAM,OACf,6BAAqBA,EAAOC,MAAnBD,EAAO9E,gBAQxBH,EA7HD,WAEV,IAAOG,EAAMgF,cAANhF,GAED1B,EAAG,UAAMe,EAAN,kBAAuBW,EAAvB,oBAAqCV,EAArC,mBACHkE,EAAYnF,EAASC,GAC3B,OAAGkF,EAAU/E,UAAY+E,EAAU7E,OACxB,cAAC,EAAD,IAGJ,cAAC,EAAD,CAAa6E,UAAWA,K,SChB3BvC,G,OAASgE,IAAThE,MA6BFiE,EAAe,SAAApF,GACjB,MAMIA,EANIC,MAEAe,EAFR,EAEQA,YACAd,EAHR,EAGQA,GACAE,EAJR,EAIQA,MAGFa,EAAU,6CAAyCD,GAEzD,OACI,cAAC,IAAD,CACIpB,MAAO,CAAEyF,MAAO,IAAKC,OAAQ,IAC7BC,MAAO,qBAAKlE,IAAKJ,EAAYuE,IAAI,KAFrC,SAIQ,cAACrE,EAAD,CACIf,MAAOA,EACPR,MAAO,CAAC6F,UAAW,UACnBC,YACA,cAAC,IAAD,CAAMlF,GAAE,iBAAYN,GAApB,SACI,cAAC,IAAD,CAAQR,UAAU,UAAlB,SAA4B,mBAAGA,UAAU,wBAOlDiG,EAtDK,SAAC3F,GAIjB,IACOY,EADeZ,EAAd4F,UACDhF,QASP,OARAyD,QAAQC,IAAI1D,GACZyD,QAAQC,IAAI1D,EAAQjC,SAQhB,qBAAKe,UAAU,kBAAf,SAEI,qBAAKA,UAAU,iBAAf,SACCkB,EAAQE,KAAI,SAAAb,GAAK,OACd,cAAC,EAAD,CAAcA,MAAOA,Y,SCtBtB,WAACD,GAEZ,IAAO6F,EAAgC7F,EAAhC6F,YAAaC,EAAmB9F,EAAnB8F,SAAUC,EAAS/F,EAAT+F,MAE9B,OACI,8BACI,cAAC,IAAD,CACIF,YAAaA,EACbC,SAAUA,EACVC,MAAOA,EACPC,SAAU,QCyCXC,G,OA/CG,WACd,MAAkCvH,mBAAS,IAA3C,mBAAOkH,EAAP,KAAkBM,EAAlB,KACA,EAAwBxH,mBAAS,GAAjC,mBAAOyH,EAAP,KAAaC,EAAb,KAEAnH,qBAAU,WACN,sBAAC,8BAAAC,EAAA,sEAC0BC,MAAM,GAAD,OACrBI,EADqB,sCACgBC,EADhB,gCAC+C2G,IAF9E,cACSE,EADT,gBAIwBA,EAAShH,OAJjC,OAISiH,EAJT,OAKGJ,EAAaI,GACbjC,QAAQC,IAAIgC,GANf,0CAAD,KAQF,CAACH,IAQH,OACI,sBAAKzG,UAAU,aAAf,UACI,oBAAIE,MAAO,CACH6F,UAAW,SACXH,OAAQ,QAFhB,kCAKA,sBAAK5F,UAAU,SAAf,UACKkG,EAAUhF,QACP,cAAC,EAAD,CAAagF,UAAWA,IACtB,cAAC,EAAD,IAEN,cAACW,EAAD,CACIV,YAAaD,EAAUO,KAEvBL,SArBC,SAAAU,GACbJ,EAAQI,GACRnC,QAAQC,IAAIkC,GACZnC,QAAQC,IAAI,SAmBAyB,MAAOH,EAAUa,cAEjBT,SAAU,aCOfU,G,OA9CC,WACZ,MAAkChI,mBAAS,IAA3C,mBAAOkH,EAAP,KAAkBM,EAAlB,KACA,EAAwBxH,mBAAS,GAAjC,mBAAOyH,EAAP,KAAaC,EAAb,KAEAnH,qBAAU,WACN,sBAAC,8BAAAC,EAAA,sEAC0BC,MAAM,GAAD,OACrBI,EADqB,kCACYC,EADZ,gCAC2C2G,IAF1E,cACSE,EADT,gBAIwBA,EAAShH,OAJjC,OAISiH,EAJT,OAKGJ,EAAaI,GACbjC,QAAQC,IAAIgC,GANf,0CAAD,KAQF,CAACH,IAQH,OACI,sBAAKzG,UAAU,aAAf,UACI,oBAAIE,MAAO,CACH6F,UAAW,SACXH,OAAQ,QAFhB,8BAIA,sBAAK5F,UAAU,SAAf,UACKkG,EAAUhF,QACP,cAAC,EAAD,CAAagF,UAAWA,IACtB,cAAC,EAAD,IAEN,cAACW,EAAD,CACIV,YAAaD,EAAUO,KAEvBL,SApBC,SAAAU,GACbJ,EAAQI,GACRnC,QAAQC,IAAIkC,GACZnC,QAAQC,IAAI,SAkBAyB,MAAOH,EAAUa,cAEjBT,SAAU,aCvCtB7E,G,OAASgE,IAAThE,MAmFFwF,EAAS,SAAC3G,GACZ,MAMIA,EANIC,MAEAe,EAFR,EAEQA,YACAd,EAHR,EAGQA,GACAE,EAJR,EAIQA,MAGFa,EAAU,6CAAyCD,GAczD,OACI,cAAC,IAAD,CACIpB,MAAO,CAAEyF,MAAO,IAAKC,OAAQ,IAC7BC,MAAO,qBAAKlE,IAAKJ,EAAYuE,IAAI,KAFrC,SAKQ,cAAC,EAAD,CACIpF,MAAOA,EACPR,MAAO,CAAC6F,UAAW,UACnBC,YACA,cAAC,IAAD,CAAMlF,GAAE,iBAAYN,GAApB,SACI,cAAC,IAAD,CAAQR,UAAU,UAAlB,SAA4B,mBAAGA,UAAU,wBASlDkH,GA3HI,SAAC5G,GAqDhB,IAAOxB,EAAOwB,EAAPxB,IACP6F,QAAQC,IAAI9F,GACZ,IAAOoC,EAAWpC,EAAXoC,QAEP,OAAIA,EAeA,qBAAKlB,UAAU,qBAAf,SACIkB,EAAQE,KAAI,SAAAb,GAAK,OACT,cAAC,EAAD,CAAQA,MAAOA,SAfvB,qCACI,8BACI,qBAAKP,UAAU,WAEnB,8BACI,4E,UCZLmH,I,OArDA,WACX,MAAwCnI,mBAAS,IAAjD,mBAAOoI,EAAP,KAAqBC,EAArB,KAEA,EAAsBrI,mBAAS,IAA/B,mBAAOF,EAAP,KAAYwI,EAAZ,KACA,EAAwBtI,mBAAS,GAAjC,mBAAOyH,EAAP,KAAaC,EAAb,KAEAnH,qBAAU,WACN,sBAAC,8BAAAC,EAAA,sEAC0BC,MAAM,qDAAD,OAC6BK,EAD7B,kBAC8CsH,EAD9C,gCACkFX,IAFjH,cACSE,EADT,gBAIwBA,EAAShH,OAJjC,OAISiH,EAJT,OAKGU,EAAOV,GACPjC,QAAQC,IAAIgC,GACZjC,QAAQC,IAAIgC,EAAO1F,SAPtB,0CAAD,KAUD,CAACkG,EAAcX,IAalB,OACI,sBAAKzG,UAAU,cAAf,UACI,0CACA,cAAC,KAAD,CAAOuH,YAAY,yDAAsDnB,SAd3D,SAACU,GACnBO,EAAgBP,EAAErE,OAAO+E,OACzB7C,QAAQC,IAAIyC,MAaR,sBAAKrH,UAAU,SAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,cAAC,GAAD,CAAYlB,IAAKA,MAErB,cAAC+H,EAAD,CACIV,YAAarH,EAAI2H,KAEjBL,SAjBC,SAAAU,GACbJ,EAAQI,GACRnC,QAAQC,IAAIkC,GACZnC,QAAQC,IAAI,SAeAyB,MAAOvH,EAAIiI,cAEXT,SAAU,a,UClBfmB,I,OA7BC,WACZ,OACI,sBAAKzH,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,YAEnB,eAAC,KAAD,CACI0H,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtB1H,MAAO,CAAC2H,WAAY,QAJxB,UAMI,cAAC,KAAKrG,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,IAAT,mBADW,KAGf,cAAC,KAAKU,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,cAAT,sCADW,KAGf,cAAC,KAAKU,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,WAAT,+BADW,KAGf,cAAC,KAAKU,KAAN,UACI,cAAC,IAAD,CAAMV,GAAG,UAAT,uBADW,aCahBgH,GAvBH,WACV,IAAOC,EAAmBxF,IAAnBwF,OAAQC,EAAWzF,IAAXyF,QACf,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYC,SAAS,IAArB,UACE,cAACF,EAAD,CAAQ7H,MAAO,CAACgI,OAAQ,GAAxB,SACE,cAAC,GAAD,MAEF,cAACF,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,KAAK,IAAIC,OAAO,EAAMC,UAAW3F,IACxC,cAAC,IAAD,CAAOyF,KAAK,cAAcC,OAAO,EAAMC,UAAW9B,IAClD,cAAC,IAAD,CAAO4B,KAAK,WAAWC,OAAO,EAAMC,UAAWrB,IAC/C,cAAC,IAAD,CAAOmB,KAAK,UAAUC,OAAO,EAAMC,UAAWlB,KAC9C,cAAC,IAAD,CAAOgB,KAAK,aAAaC,OAAO,EAAMC,UAAWhI,IACjD,cAAC,IAAD,CAAO8H,KAAK,IAAIE,UAAWnF,eCpBxBoF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.3fae55da.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url, options) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const res = await fetch(url, options); \r\n                const json = await res.json();  \r\n                setResult(json);\r\n                setLoading(false);             \r\n            } catch(err){\r\n                setError(err);\r\n                setLoading(false);\r\n            }\r\n        }\r\n        getData()\r\n    }, [url, options])\r\n    return {loading, result, error};\r\n};\r\n\r\nexport default useFetch;","export const URL_API = 'https://api.themoviedb.org/3';\r\nexport const API_KEY = '85d404a935cdec4f5b1c5fe10bff1549';","import './Loading.sass'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n            <h5>Cargando...</h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import { Carousel, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../Loading';\r\n\r\nimport './SliderMovies.sass'\r\n\r\nconst SliderMovies = props => {\r\n    //Destructuración de los props de newMovies\r\n    const { newMovies } = props;\r\n    if(newMovies.loading || !newMovies.result){\r\n        return <Loading />\r\n    }\r\n\r\n    //Destructuración de los resultados de newMovies.result, de las películas;\r\n    const { results } = newMovies.result;\r\n\r\n    return (\r\n        <Carousel autoplay className=\"slider-movies\">\r\n            {results.map(movie => ( \r\n                <Movie key={movie.id}\r\n                movie={movie}/>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nconst Movie = props => {\r\n    const {movie: {\r\n        id, \r\n        backdrop_path, \r\n        title,\r\n        overview \r\n    }} = props;\r\n\r\n    const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n    return (\r\n        <div \r\n            className=\"slider-movies__movie\"\r\n            style={{backgroundImage: `url('${backdropPath}')`}}\r\n        >\r\n            <div className=\"slider-movies__movie-info\">\r\n                <div>\r\n                    <h2>{title}</h2>\r\n                    <p>{overview}</p>\r\n                    <Link to={`/movie/${id}`}>\r\n                        <Button type=\"primary\">Ver más</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SliderMovies;","import { List, Avatar, Button, Col, Row } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../Loading';\r\nimport {RightOutlined} from '@ant-design/icons';\r\n\r\nimport './MovieList.sass';\r\n\r\nconst MovieList = props => {\r\n    const {title, popularMovies} = props;\r\n\r\n    if(popularMovies.loading || !popularMovies.result){\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <List\r\n            className=\"movie-list\"\r\n            size=\"default\"\r\n            header={<h2>{title}</h2>}\r\n            bordered\r\n            dataSource={popularMovies.result.results}\r\n            renderItem={movie => <RenderMovie movie={movie}/>}\r\n        />\r\n    );\r\n};\r\n\r\nconst RenderMovie = props => {\r\n    const { movie: \r\n        {\r\n            poster_path,\r\n            id,\r\n            title\r\n        } \r\n    } = props;\r\n    const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\r\n\r\n    return (\r\n        <List.Item className=\"movie-list__movie\">\r\n            <List.Item.Meta \r\n                avatar={<Avatar src={posterPath} />}\r\n                title={ <Link to={`/movie/${id}`}>{title}</Link>}\r\n            />\r\n            <Link to={`/movie/${id}`}>\r\n                <Button \r\n                    type=\"primary\"\r\n                    shape=\"circle\"\r\n                    icon={<RightOutlined />}\r\n                >\r\n                </Button>\r\n            </Link>\r\n        </List.Item>\r\n    )\r\n};\r\n\r\nexport default MovieList;","import {Layout} from 'antd';\r\nimport './Footer.sass';\r\n\r\nconst Footer = () => {\r\n    const {Footer} = Layout;\r\n    return (\r\n        <Footer className=\"footer\">\r\n            <p>🎬 Movie Finder por\r\n                <a href=\"https://github.com/MilenaGimenez/\" target=\"_blank\"> Milena Gimenez</a>\r\n            </p>\r\n            \r\n        </Footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import useFetch from '../hooks/useFetch';\r\nimport { URL_API, API_KEY } from '../utils/constants';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport SliderMovies from '../components/SliderMovies';\r\nimport MovieList from '../components/MovieList';\r\nimport Footer from '../components/Footer';\r\n\r\nconst Home = () => {\r\n    const url = `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=en-ES&page=1`\r\n    const urlPopular = `${URL_API}/movie/popular?api_key=${API_KEY}&language=en-ES&page=1`\r\n    const urlRanked = `${URL_API}/movie/top_rated?api_key=${API_KEY}&language=en-ES&page=1`\r\n\r\n    const newMovies = useFetch(url);\r\n    const popularMovies = useFetch(urlPopular);\r\n    const topRankedMovies = useFetch(urlRanked);\r\n\r\n    return (\r\n        <div>\r\n            <SliderMovies newMovies={newMovies}/>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={12} lg={12}>\r\n                    <MovieList title=\"Peliculas populares\" popularMovies={popularMovies}/>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12} lg={12}>\r\n                <MovieList title=\"Top Mejores Películas\" popularMovies={topRankedMovies}/>\r\n                </Col>\r\n            </Row>\r\n            <Footer></Footer>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","const Error404 = () => {\r\n    return \"Error 404...\"\r\n};\r\n\r\nexport default Error404;","import {useState, useEffect} from 'react';\r\nimport {Modal} from 'antd';\r\nimport ReactPlayer  from 'react-player';\r\n\r\nimport './ModalVideo.sass';\r\n\r\nconst ModalVideo = props => {\r\n    const {isOpen, close, videoKey, videoPlatform} = props;\r\n    const [urlVideo, setUrlVideo] = useState(null);\r\n\r\n    //Pregunta desde cual plataforma viene el video\r\n    useEffect(() => {\r\n        switch (videoPlatform) {\r\n          case \"YouTube\":\r\n            setUrlVideo(`https://youtu.be/${videoKey}`)\r\n          break\r\n          case \"Vimeo\":\r\n            setUrlVideo(`https://vimeo.com/${videoKey}`)\r\n          break\r\n          default:\r\n            break\r\n        } \r\n      }, [videoKey, videoPlatform]);\r\n\r\n    return (\r\n        <Modal \r\n            className=\"modal-video\" \r\n            visible={isOpen} \r\n            centered \r\n            onCancel={close} \r\n            footer={false}\r\n        >\r\n            <ReactPlayer \r\n                url={urlVideo} \r\n                controls\r\n                muted/>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalVideo;","//Dependencias\r\nimport {useState} from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { URL_API, API_KEY} from '../../utils/constants';\r\nimport Loading from '../../components/Loading';\r\nimport ModalVideo from '../../components/ModalVideo';\r\n\r\nimport './movie.sass';\r\n\r\nconst Movie = () => {\r\n    //Trae los parametros que hay en la url. En este caso el id, ya que es el único, esta en el app.js (movie/:id)\r\n    const {id} = useParams();\r\n\r\n    const url = `${URL_API}/movie/${id}?api_key=${API_KEY}&language=es-ES`;\r\n    const movieInfo = useFetch(url)\r\n    if(movieInfo.loading || !movieInfo.result){\r\n        return <Loading/>\r\n    }  \r\n\r\n    return <RenderMovie movieInfo={movieInfo}/>\r\n};\r\n\r\nconst RenderMovie = props => {\r\n    const {\r\n        movieInfo: {\r\n            result: {\r\n                title,\r\n                backdrop_path,\r\n                poster_path\r\n            }\r\n        }\r\n    } = props;\r\n\r\n    const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n    return (\r\n        <div \r\n            className=\"movie\"\r\n            style={{backgroundImage: `url('${backdropPath}')`}}\r\n        >   <div className=\"movie__dark\">\r\n                <Row className=\"fila\">\r\n                    <Col span={8} offset={3} className=\"movie__poster\">\r\n                        <PosterMovie image={poster_path} />\r\n                    </Col>\r\n                    <Col span={10} className=\"movie__info\">\r\n                        <MovieInfo \r\n                            movieInfo={props.movieInfo}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>           \r\n        </div>\r\n    );\r\n};\r\n\r\nconst PosterMovie = props => {\r\n    const { image } = props;\r\n    const posterPath = `https://image.tmdb.org/t/p/original${image}`;\r\n    \r\n    return(\r\n        <div style={{backgroundImage: `url('${posterPath}')`}}></div>\r\n    )\r\n};\r\n\r\nconst MovieInfo = props => {\r\n    const { movieInfo: {\r\n        result: {\r\n            title,\r\n            id,\r\n            release_date,\r\n            overview,\r\n            genres\r\n        }} } = props;\r\n\r\n    const [isVisibleModal, setIsVisibleModal] = useState(false)\r\n\r\n    const url = `${URL_API}/movie/${id}/videos?api_key=${API_KEY}&language=es-ES`;\r\n    const videoMovie = useFetch(url);\r\n    console.log(videoMovie);\r\n\r\n    //esto se puede hacer con una sola funcion pero es mas complicado porque lo estamos trabajando por modales separados\r\n    const openModal = () => setIsVisibleModal(true);\r\n    const closeModal = () => setIsVisibleModal(false);\r\n\r\n    const renderVideo = () => {\r\n        if(videoMovie.result){\r\n            if(videoMovie.result.results.length > 0){\r\n                return(\r\n                    <div>\r\n                        <Button \r\n                            className=\"button\"\r\n                            onClick={openModal}>\r\n                            <i className=\"far fa-play-circle\" />\r\n                            Ver Trailer\r\n                            \r\n                        </Button>\r\n                        <ModalVideo \r\n                            videoKey={videoMovie.result.results[0].key}\r\n                            videoPlatform={videoMovie.result.results[0].site}\r\n                            isOpen={isVisibleModal}\r\n                            close={closeModal}\r\n                        /> \r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"info\">\r\n                <h1>\r\n                    {title}\r\n                    <span>\r\n                        {moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")}\r\n                    </span>\r\n                </h1>       \r\n                {renderVideo()}      \r\n            </div>\r\n\r\n            <div className=\"content\">\r\n                <h3>General</h3>\r\n                <p>{overview}</p>\r\n                <h3>Generos</h3>\r\n                <ul>\r\n                    {genres.map(gender => \r\n                       <li key={gender.id}>{gender.name}</li> \r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Movie;","import { List, Avatar, Button, Card } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../Loading';\r\n\r\nimport './MoviesCards.sass';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst MoviesCards = (props) => {\r\n    // const {title, newMovies} = props;    \r\n  \r\n    //Destructuración de los resultados de newMovies.result, de las películas;\r\n    const { movieList } = props;\r\n    const {results} = movieList;\r\n    console.log(results);\r\n    console.log(results.loading);\r\n    // console.log(results.poster_path); \r\n\r\n    // if(movieList.loading || !movieList.result){\r\n    //      return <Loading />\r\n    // }\r\n\r\n    return (\r\n        <div className=\"cards-new-movie\">\r\n            \r\n            <div className=\"card-new-movie\">\r\n            {results.map(movie => (  \r\n                <CardNewMovie movie={movie}/>\r\n                \r\n            ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CardNewMovie = props => {\r\n    const { movie: \r\n        {\r\n            poster_path,\r\n            id,\r\n            title\r\n        } \r\n    } = props;\r\n    const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\r\n    //console.log(posterPath);\r\n    return (\r\n        <Card                     \r\n            style={{ width: 240, margin: 10}}                       \r\n            cover={<img src={posterPath} alt=\"\"/>}\r\n            >\r\n                <Meta \r\n                    title={title} \r\n                    style={{textAlign: 'center'}}\r\n                    description={\r\n                    <Link to={`/movie/${id}`}>\r\n                        <Button className=\"btn-eye\"><i className=\"far fa-eye\"></i></Button>\r\n                     </Link>}                    \r\n                />                 \r\n        </Card>    \r\n    )\r\n};\r\n\r\nexport default MoviesCards;","import {Pagination} from 'antd';\r\nimport {URL_API, API_KEY} from '../../utils/constants'\r\nimport useFetch from '../../hooks/useFetch';\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport default (props) => { \r\n    \r\n    const {currentPage, onChange, total} = props;\r\n    \r\n    return (\r\n        <div>\r\n            <Pagination \r\n                currentPage={currentPage}\r\n                onChange={onChange}\r\n                total={total} \r\n                pageSize={20}\r\n                />\r\n        </div>\r\n    );\r\n};","import {useEffect, useState} from 'react';\r\nimport useFetch from '../hooks/useFetch';\r\nimport { URL_API, API_KEY } from '../utils/constants';\r\nimport MoviesCards from '../components/MoviesCards';\r\nimport Paginador from '../components/Paginador';\r\nimport Loading from '../components/Loading';\r\n\r\nimport './new-movies.sass'\r\n\r\nconst NewMovies = () => {      \r\n    const [movieList, setMovieList] = useState([])\r\n    const [page, setPage] = useState(1) \r\n\r\n    useEffect(()=>{\r\n        (async() => {\r\n            const response = await fetch(\r\n                `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=en-ES&page=${page}`\r\n            )\r\n            const movies = await response.json()\r\n            setMovieList(movies)\r\n            console.log(movies);\r\n        })()\r\n    },[page])\r\n\r\n    const onChange = e => {\r\n        setPage(e)\r\n        console.log(e);\r\n        console.log('hola');\r\n    }\r\n        \r\n    return (\r\n        <div className=\"new-movies\">\r\n            <h1 style={{\r\n                    textAlign: 'center',\r\n                    margin: '20px'\r\n                }}\r\n            >Ultimos lanzamientos</h1>\r\n            <div className=\"prueba\">\r\n                {movieList.results ? \r\n                    <MoviesCards movieList={movieList} /> \r\n                    : <Loading />}\r\n                                \r\n                <Paginador \r\n                    currentPage={movieList.page}\r\n                    //defaultCurrent={1}  \r\n                    onChange={onChange}\r\n                    total={movieList.total_results}\r\n                    //showTotal={total => `Total ${total} items`}  \r\n                    pageSize={20}\r\n                    //showSizeChanger={true}\r\n                />\r\n            </div>            \r\n        </div>           \r\n    )\r\n};\r\n\r\nexport default NewMovies;","import {useEffect, useState} from 'react';\r\nimport useFetch from '../hooks/useFetch';\r\nimport { URL_API, API_KEY } from '../utils/constants';\r\nimport MoviesCards from '../components/MoviesCards';\r\nimport Paginador from '../components/Paginador';\r\nimport Loading from '../components/Loading';\r\n\r\nimport './popular.sass'\r\n\r\nconst Popular = () => {\r\n    const [movieList, setMovieList] = useState([])\r\n    const [page, setPage] = useState(1) \r\n\r\n    useEffect(()=>{\r\n        (async() => {\r\n            const response = await fetch(\r\n                `${URL_API}/movie/popular?api_key=${API_KEY}&language=en-ES&page=${page}`\r\n            )\r\n            const movies = await response.json()\r\n            setMovieList(movies)\r\n            console.log(movies);\r\n        })()\r\n    },[page])\r\n\r\n    const onChange = e => {\r\n        setPage(e)\r\n        console.log(e);\r\n        console.log('hola');\r\n    }\r\n        \r\n    return (\r\n        <div className=\"new-movies\">\r\n            <h1 style={{\r\n                    textAlign: 'center',\r\n                    margin: '20px'\r\n                }}>Más populares</h1>\r\n            <div className=\"prueba\">\r\n                {movieList.results ? \r\n                    <MoviesCards movieList={movieList} /> \r\n                    : <Loading />}\r\n                                \r\n                <Paginador \r\n                    currentPage={movieList.page}\r\n                    //defaultCurrent={1}  \r\n                    onChange={onChange}\r\n                    total={movieList.total_results}\r\n                    //showTotal={total => `Total ${total} items`}  \r\n                    pageSize={20}\r\n                    //showSizeChanger={true}\r\n                />\r\n            </div>\r\n        </div>           \r\n    )\r\n};\r\n\r\nexport default Popular;","import {useState, useEffect} from 'react';\r\nimport { Input, List, Avatar, Button, Card, Row} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../Loading';\r\nimport { URL_API, API_KEY } from '../../utils/constants';\r\nimport './SearchPage.sass';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst SearchPage = (props) => {\r\n    //let leticia\r\n    // const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=Jack+Reacher`\r\n    // const [inputUsuario, setImputUsuario] = useState('')\r\n    // const [url, setUrl] = useState([]);\r\n   // let busquedaUsuario \r\n    //const {title, allMovies} = props;\r\n\r\n    // if(allMovies.loading || !allMovies.result){\r\n    //     return <Loading />\r\n    // }\r\n  \r\n    // const { results } = allMovies.result;\r\n    // console.log(results); \r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         const response = await fetch(\r\n    //             `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${inputUsuario}`\r\n    //         );\r\n    //         const movies = await response.json()\r\n    //         setUrl(movies.results)\r\n    //         console.log(movies);\r\n    //         console.log(movies.results);\r\n    //         // const letciana = movies.results\r\n    //         // console.log(letciana);\r\n\r\n    //         // const {page, results, total_pages, total_results} = movies;\r\n    //         // console.log(total_results);\r\n\r\n    //     })();\r\n    // }, [inputUsuario]);\r\n   \r\n    // const {page, results, total_pages, total_results} = movies;\r\n    // console.log(total_results);\r\n/*     useEffect(() => {\r\n        (async () => {\r\n          const response = await fetch(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${inputUsuario}`\r\n          );\r\n          const movies = await response.json();\r\n          console.log(movies);\r\n          //setLoadingState(false);\r\n          //setUrl(movies);\r\n        })();\r\n      }, [page, inputValue]); */\r\n\r\n    // const onChange = (e) => {\r\n    //     setImputUsuario(e.target.value)\r\n    //     console.log(setImputUsuario);\r\n    //     //console.log(e.target.value);\r\n    //     //busquedaUsuario = e.target.value\r\n    //     //setBusqueda(busquedaUsuario)\r\n    // }\r\n    const {url} = props\r\n    console.log(url);\r\n    const {results} = url  \r\n    //if(!results) return <Loading />\r\n    if(!results) {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <div className=\"logo\"></div>              \r\n                </div>\r\n                <div>\r\n                    <h2>Escribe el nombre de una película</h2>                \r\n                </div>\r\n            </>\r\n            \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-page-prueba\">\r\n           {results.map(movie => (  \r\n                    <Prueba movie={movie}/>                    \r\n                ))}\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nconst Prueba = (props) => {\r\n    const { movie: \r\n        {\r\n            poster_path,\r\n            id,\r\n            title\r\n        } \r\n    } = props;\r\n    const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\r\n    \r\n    // const esONo = () => {\r\n    //     if(poster_path === null){\r\n    //         // const posterPath = \"../../assets/no-disponible.jpg\"        \r\n    //         const posterPath = `https://www.hola.com/imagenes/estar-bien/20190820147813/razas-perros-pequenos-parecen-grandes/0-711-550/razas-perro-pequenos-grandes-m.jpg`;\r\n        \r\n    //     } else {\r\n    //         const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\r\n    //     }\r\n    //     return\r\n    // }\r\n    \r\n\r\n    return(\r\n        <Card                     \r\n            style={{ width: 240, margin: 10}}                       \r\n            cover={<img src={posterPath} alt=\"\"/>}\r\n            // cover={<img src={esONo} alt=\"\"/>}\r\n            >\r\n                <Meta \r\n                    title={title} \r\n                    style={{textAlign: 'center'}}\r\n                    description={\r\n                    <Link to={`/movie/${id}`}>\r\n                        <Button className=\"btn-eye\"><i className=\"far fa-eye\"></i></Button>\r\n                     </Link>}                    \r\n                />              \r\n        </Card> \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SearchPage;","import SearchPage from '../../components/SearchPage';\r\nimport {useState, useEffect} from 'react'\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { URL_API, API_KEY } from '../../utils/constants';\r\nimport { Input, List, Avatar, Button, Card, } from 'antd';\r\nimport Paginador from '../../components/Paginador';\r\n\r\nimport './search.sass'\r\n\r\nconst Search = () => {\r\n    const [inputUsuario, setImputUsuario] = useState('')\r\n\r\n    const [url, setUrl] = useState([]);\r\n    const [page, setPage] = useState(1) \r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetch(\r\n                `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${inputUsuario}&language=en-ES&page=${page}`\r\n            );\r\n            const movies = await response.json()\r\n            setUrl(movies)\r\n            console.log(movies);\r\n            console.log(movies.results);\r\n\r\n        })();\r\n    }, [inputUsuario, page]);\r\n\r\n    const onChangeInput = (e) => {\r\n        setImputUsuario(e.target.value)\r\n        console.log(setImputUsuario);\r\n    }\r\n\r\n    const onChange = e => {\r\n        setPage(e)\r\n        console.log(e);\r\n        console.log('hola');\r\n    }\r\n\r\n    return(\r\n        <div className=\"search-page\">\r\n            <h1>Buscador</h1>\r\n            <Input placeholder=\"Escribe el nombre de la película que quieras buscar\" onChange={onChangeInput}/>\r\n            <div className=\"prueba\">\r\n                <div className=\"card-new-movie\">   \r\n                    <SearchPage url={url}/>\r\n                </div>\r\n                <Paginador \r\n                    currentPage={url.page}\r\n                    //defaultCurrent={1}  \r\n                    onChange={onChange}\r\n                    total={url.total_results}\r\n                    //showTotal={total => `Total ${total} items`}  \r\n                    pageSize={20}\r\n                    //showSizeChanger={true}\r\n                />\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n};\r\nexport default Search;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\n//import { ReactComponent as Logo } from '../../assets/logo.svg';\r\nimport \"./MenuTop.sass\";\r\n\r\nconst MenuTop = () => {\r\n    return (\r\n        <div className=\"menu-top\">\r\n            <div className=\"menu-top__logo\">\r\n                <div className=\"logo2\"></div>\r\n            </div>\r\n            <Menu\r\n                theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={[\"1\"]}\r\n                style={{lineHeight: \"68px\"}}\r\n            >\r\n                <Menu.Item key=\"1\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <Link to=\"/new-movies\">Últimos lanzamientos</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <Link to=\"/popular\">Más populares</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">\r\n                    <Link to=\"/search\">Buscador</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuTop;","//Librerias y funcionalidades\r\nimport { Layout } from 'antd';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\n//Pages\r\nimport Home from './pages/home';\r\nimport Error404 from './pages/error404';\r\nimport Movie from './pages/movie/';\r\nimport NewMovies from './pages/new-movies';\r\nimport Popular from './pages/popular';\r\n//import Popular from './pages/popular';\r\nimport Search from './pages/search/';\r\n\r\n//Componentes\r\nimport MenuTop from './components/MenuTop';\r\n\r\n\r\nconst App = () => {\r\n  const {Header, Content} = Layout;\r\n  return (\r\n    <Layout>\r\n      <HashRouter basename=\"/\">\r\n        <Header style={{zIndex: 1}}>\r\n          <MenuTop />\r\n        </Header>\r\n        <Content>\r\n          <Switch>\r\n            <Route path=\"/\" exact={true} component={Home} />\r\n            <Route path=\"/new-movies\" exact={true} component={NewMovies} />\r\n            <Route path=\"/popular\" exact={true} component={Popular} />\r\n            <Route path=\"/search\" exact={true} component={Search} />\r\n            <Route path=\"/movie/:id\" exact={true} component={Movie} />\r\n            <Route path=\"*\" component={Error404} />\r\n          </Switch>\r\n        </Content>    \r\n      </HashRouter>\r\n    </Layout>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}